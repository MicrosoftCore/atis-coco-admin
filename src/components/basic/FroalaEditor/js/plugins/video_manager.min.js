/*!
 * froala_editor v2.9.0 (https://www.froala.com/wysiwyg-editor)
 * License https://froala.com/wysiwyg-editor/terms/
 * Copyright 2014-2018 Froala Labs
 */

;(function (O) {
  if (
    (O.extend(O.FE.DEFAULTS, {
      videoManagerLoadURL: 'https://i.froala.com/load-files',
      videoManagerLoadMethod: 'get',
      videoManagerLoadParams: {},
      videoManagerPreloader: null,
      videoManagerDeleteURL: '',
      videoManagerDeleteMethod: 'post',
      videoManagerDeleteParams: {},
      videoManagerPageSize: 12,
      videoManagerScrollOffset: 20,
      videoManagerToggleTags: !0
    }),
    (O.FE.PLUGINS.videoManager = function (o) {
      var g
      var l
      var r
      var i
      var n
      var d
      var s
      var f
      var m
      var u
      var c
      var h = 'image_manager'
      var e = 10
      var p = 11
      var v = 12
      var M = 13
      var w = 14
      var b = 15
      var C = 21
      var L = 22
      var t = {}
      function y () {
        var e = O(window).outerWidth()
        return e < 768 ? 2 : e < 1200 ? 3 : 4
      }
      function D () {
        n.empty()
        for (var e = 0; e < c; e++) n.append('<div class="fr-list-column"></div>')
      }
      function I () {
        if (
          m < s.length &&
          (n.outerHeight() <= r.outerHeight() + o.opts.videoManagerScrollOffset ||
            r.scrollTop() + o.opts.videoManagerScrollOffset > n.outerHeight() - r.outerHeight())
        ) {
          f++
          for (
            var e = o.opts.videoManagerPageSize * (f - 1);
            e < Math.min(s.length, o.opts.videoManagerPageSize * f);
            e++
          ) {
            a(s[e])
          }
        }
      }
      function a (i) {
        if (!i.url) {
          return
        }
        var n = new Image()
        var t
        var v
        var s = O(
          '<div class="fr-image-container fr-empty fr-image-' +
            u++ +
            '" data-loading="' +
            o.language.translate('Loading') +
            '.." data-deleting="' +
            o.language.translate('Deleting') +
            '.."><video id="video' +
            u++ +
            '" + style="width: 100%;"/>'
        )
        T(!1)
        n.onload = function () {
          s.height(Math.floor(s.width() / n.width * n.height))
          var t = O('<img/>')
          if (i.thumb) t.attr('src', i.thumb)
          else {
            if ((U(w, i), !i.url)) return U(b, i) && !1
            t.attr('src', i.url)
          }
          if ((i.url && t.attr('data-url', i.url), i.tag)) {
            if (
              (l.find('.fr-modal-more.fr-not-available').removeClass('fr-not-available'),
              l.find('.fr-modal-tags').show(),
              i.tag.indexOf(',') >= 0)
            ) {
              for (var e = i.tag.split(','), a = 0; a < e.length; a++) {
                e[a] = e[a].trim()
                if (d.find('a[title="' + e[a] + '"]').length === 0) {
                  d.append('<a role="button" title="' + e[a] + '">' + e[a] + '</a>')
                }
              }
              t.attr('data-tag', e.join())
            } else {
              if (d.find('a[title="' + i.tag.trim() + '"]').length === 0) {
                d.append('<a role="button" title="' + i.tag.trim() + '">' + i.tag.trim() + '</a>')
                t.attr('data-tag', i.tag.trim())
              }
            }
          }
          for (var r in (i.name && t.attr('alt', i.name), i)) {
            i.hasOwnProperty(r) && r !== 'thumb' && r !== 'url' && r !== 'tag' && t.attr('data-' + r, i[r])
          }
          s
            .append(t)
            .append(
              O(o.icon.create('videoManagerDelete'))
                .addClass('fr-delete-img')
                .attr('title', o.language.translate('Delete'))
            )
            .append(
              O(o.icon.create('videoManagerInsert'))
                .addClass('fr-insert-img')
                .attr('title', o.language.translate('Insert'))
            )
          d.find('.fr-selected-tag').each(function (e, a) {
            k(t, a.text) || s.hide()
          })
          t.on('load', function () {
            s.removeClass('fr-empty')
            s.height('auto')
            m++
            E(x(parseInt(t.parent().attr('class').match(/fr-image-(\d+)/)[1], 10) + 1))
            T(!1)
            m % o.opts.videoManagerPageSize === 0 && I()
          })
          o.events.trigger('videoManager.imageLoaded', [ t ])
        }
        n.onerror = function () {
          // m++,
          //   s.remove(),
          //   E(x(parseInt(s.attr('class').match(/fr-image-(\d+)/)[1], 10) + 1)),
          //   U(e, i),
          //   m % o.opts.videoManagerPageSize == 0 && I()
        }
        n.src = i.thumb || i.url
        P().append(s)
        t = u - 1
        v = document.getElementById('video' + t)
        v.onloadstart = (function () {
          s.height(Math.floor(s.width() / n.width * n.height))
          var t = O(v)
          if (i.thumb) t.attr('src', i.thumb)
          else {
            if ((U(w, i), !i.url)) return U(b, i) && !1
            t.attr('src', i.url)
          }
          if ((i.url && t.attr('data-url', i.url), i.tag)) {
            if (
              (l.find('.fr-modal-more.fr-not-available').removeClass('fr-not-available'),
              l.find('.fr-modal-tags').show(),
              i.tag.indexOf(',') >= 0)
            ) {
              for (var e = i.tag.split(','), a = 0; a < e.length; a++) {
                e[a] = e[a].trim()
                if (d.find('a[title="' + e[a] + '"]').length === 0) {
                  d.append('<a role="button" title="' + e[a] + '">' + e[a] + '</a>')
                }
              }
              t.attr('data-tag', e.join())
            } else {
              if (d.find('a[title="' + i.tag.trim() + '"]').length === 0) {
                d.append('<a role="button" title="' + i.tag.trim() + '">' + i.tag.trim() + '</a>')
                t.attr('data-tag', i.tag.trim())
              }
            }
          }
          for (var r in (i.name && t.attr('alt', i.name), i)) {
            i.hasOwnProperty(r) && r !== 'thumb' && r !== 'url' && r !== 'tag' && t.attr('data-' + r, i[r])
          }
          s
            .append(t)
            // .append(
            //   O(o.icon.create('videoManagerDelete'))
            //     .addClass('fr-delete-img')
            //     .attr('title', o.language.translate('Delete'))
            // )
            .append(
              O(o.icon.create('videoManagerInsert'))
                .css('-webkit-transform', 'translateY(-50%) translateX(-50%)')
                .addClass('fr-insert-img')
                .attr('title', o.language.translate('Insert'))
            )
          d.find('.fr-selected-tag').each(function (e, a) {
            k(t, a.text) || s.hide()
          })
          v.onloadeddata = function () {
            s.removeClass('fr-empty')
            s.height('auto')
            m++
            E(x(parseInt(t.parent().attr('class').match(/fr-image-(\d+)/)[1], 10) + 1))
            T(!1)
            m % o.opts.videoManagerPageSize === 0 && I()
          }
          o.events.trigger('videoManager.imageLoaded', [ t ])
        })()
        v.onerror = function () {
          m++
          s.remove()
          E(x(parseInt(s.attr('class').match(/fr-image-(\d+)/)[1], 10) + 1))
          U(e, i)
          m % o.opts.videoManagerPageSize === 0 && I()
        }
      }
      function P () {
        var r, i
        return (
          n.find('.fr-list-column').each(function (e, a) {
            var t = O(a)
            if (e === 0) {
              i = t.outerHeight()
              r = t
            } else {
              if (t.outerHeight() < i) {
                i = t.outerHeight()
                r = t
              }
            }
          }),
          r
        )
      }
      function x (e) {
        e === undefined && (e = 0)
        for (var a = [], t = u - 1; e <= t; t--) {
          var r = n.find('.fr-image-' + t)
          if (r.length) {
            a.push(r)
            O('<div id="fr-image-hidden-container">').append(r)
            n.find('.fr-image-' + t).remove()
          }
        }
        return a
      }
      function E (e) {
        for (var a = e.length - 1; a >= 0; a--) P().append(e[a])
      }
      function T (e) {
        if ((e === undefined && (e = !0), !g.is(':visible'))) return !0
        var a = y()
        if (a !== c) {
          c = a
          var t = x()
          D()
          E(t)
        }
        o.modals.resize(h)
        e && I()
      }
      function q (e) {
        var a = {}
        var t = e.data()
        for (var r in t) t.hasOwnProperty(r) && r !== 'url' && r !== 'tag' && (a[r] = t[r])
        return a
      }
      function S (e) {
        var a = O(e.currentTarget).siblings('video')
        var t = g.data('instance') || o
        var r = g.data('current-image')
        if ((o.modals.hide(h), t.image.showProgressBar(), r)) {
          r.data('fr-old-src', r.attr('src'))
          r.trigger('click')
        } else {
          t.events.focus(!0)
          t.selection.restore()
          // var i = t.position.getBoundingRect()
          // var n = i.left + i.width / 2 + O(o.doc).scrollLeft()
          // var s = i.top + i.height + O(o.doc).scrollTop()
          // t.popups.setContainer('image.insert', o.$sc)
          // t.popups.show('image.insert', n, s)
        }
        t.video.insert(
          '<span contenteditable="false" draggable="true" class="fr-video fr-dvb fr-draggable fr-active"><video class="fr-draggable" src="' +
            a.data('url') +
            '" style="max-width:100%;height:auto;" controls>' +
            o.language.translate('Your browser does not support HTML5 video.') +
            '</video></span>'
        )
        // t.image.insert(, !1, q(a), r)
      }
      function R (e) {
        var t = O(e.currentTarget).siblings('img')
        var a = o.language.translate('Are you sure? Image will be deleted.')
        if (confirm(a)) {
          if (o.opts.videoManagerDeleteURL) {
            if (!1 !== o.events.trigger('videoManager.beforeDeleteImage', [ t ])) {
              t.parent().addClass('fr-image-deleting')
              O.ajax({
                method: o.opts.videoManagerDeleteMethod,
                url: o.opts.videoManagerDeleteURL,
                data: O.extend(O.extend({ src: t.attr('src') }, q(t)), o.opts.videoManagerDeleteParams),
                crossDomain: o.opts.requestWithCORS,
                xhrFields: { withCredentials: o.opts.requestWithCredentials },
                headers: o.opts.requestHeaders
              })
                .done(function (e) {
                  o.events.trigger('videoManager.imageDeleted', [ e ])
                  var a = x(parseInt(t.parent().attr('class').match(/fr-image-(\d+)/)[1], 10) + 1)
                  t.parent().remove()
                  E(a)
                  g.find('#fr-modal-tags > a').each(function () {
                    g.find('#fr-image-list [data-tag*="' + O(this).text() + '"]').length === 0 &&
                      O(this).removeClass('fr-selected-tag').hide()
                  })
                  H()
                  T(!0)
                })
                .fail(function (e) {
                  U(C, e.response || e.responseText)
                })
            }
          } else {
            U(L)
          }
        }
      }
      function U (e, a) {
        if (e >= 10 && e < 20) {
          i.hide()
        } else {
          if (e >= 20 && e < 30) {
            O('.fr-image-deleting').removeClass('fr-image-deleting')
            o.events.trigger('videoManager.error', [ { code: e, message: t[e] }, a ])
          }
        }
      }
      function F () {
        var e = l.find('.fr-modal-head-line').outerHeight()
        var a = d.outerHeight()
        l.toggleClass('fr-show-tags')
        if (l.hasClass('fr-show-tags')) {
          l.css('height', e + a)
          d.find('a').css('opacity', 1)
        } else {
          l.css('height', e)
          d.find('a').css('opacity', 0)
        }
      }
      function H () {
        var e = d.find('.fr-selected-tag')
        if (e.length > 0) {
          n.find('img').parent().show()
          e.each(function (e, r) {
            n.find('img').each(function (e, a) {
              var t = O(a)
              k(t, r.text) || t.parent().hide()
            })
          })
        } else {
          n.find('img').parent().show()
        }
        E(x())
        I()
      }
      function j (e) {
        e.preventDefault()
        var a = O(e.currentTarget)
        a.toggleClass('fr-selected-tag')
        o.opts.videoManagerToggleTags && a.siblings('a').removeClass('fr-selected-tag')
        H()
      }
      function k (e, a) {
        for (var t = (e.attr('data-tag') || '').split(','), r = 0; r < t.length; r++) if (t[r] === a) return !0
        return !1
      }
      return (
        (t[e] = 'Image cannot be loaded from the passed link.'),
        (t[p] = 'Error during load images request.'),
        (t[v] = 'Missing videoManagerLoadURL option.'),
        (t[M] = 'Parsing load response failed.'),
        (t[w] = 'Missing image thumb.'),
        (t[b] = 'Missing image URL.'),
        (t[C] = 'Error during delete image request.'),
        (t[L] = 'Missing videoManagerDeleteURL option.'),
        {
          require: [ 'image' ],
          _init: function () {
            if (!o.$wp && o.el.tagName !== 'IMG') return !1
          },
          show: function () {
            if (!g) {
              var e
              var a =
                '<div class="fr-modal-head-line"><i class="fa fa-bars fr-modal-more fr-not-available" id="fr-modal-more-' +
                o.sid +
                '" title="' +
                o.language.translate('Tags') +
                '"></i><h4 data-text="true">' +
                o.language.translate('Insert Video') +
                '</h4></div>'

              a += '<div class="fr-modal-tags" id="fr-modal-tags"></div>'

              e = o.opts.videoManagerPreloader
                ? '<img class="fr-preloader" id="fr-preloader" alt="' +
                  o.language.translate('Loading') +
                  '.." src="' +
                  o.opts.videoManagerPreloader +
                  '" style="display: none;">'
                : '<span class="fr-preloader" id="fr-preloader" style="display: none;">' +
                  o.language.translate('Loading') +
                  '</span>'

              e += '<div class="fr-image-list" id="fr-image-list"></div>'

              var t = o.modals.create(h, a, e)
              g = t.$modal
              l = t.$head
              r = t.$body
            }
            g.data('current-image', o.image.get())
            o.modals.show(h)
            i = g.find('#fr-preloader')
            n = g.find('#fr-image-list')
            d = g.find('#fr-modal-tags')
            c = y()
            D()
            l.css('height', l.find('.fr-modal-head-line').outerHeight())
            o.events.$on(O(o.o_win), 'resize', function () {
              T(!!s)
            })
            if (o.helpers.isMobile()) {
              o.events.bindClick(n, 'div.fr-image-container', function (e) {
                g.find('.fr-mobile-selected').removeClass('fr-mobile-selected')
                O(e.currentTarget).addClass('fr-mobile-selected')
              })
              g.on(o._mousedown, function () {
                g.find('.fr-mobile-selected').removeClass('fr-mobile-selected')
              })
            }
            o.events.bindClick(n, '.fr-insert-img', S)
            o.events.bindClick(n, '.fr-delete-img', R)
            g.on(o._mousedown + ' ' + o._mouseup, function (e) {
              e.stopPropagation()
            })
            g.on(o._mousedown, '*', function () {
              o.events.disableBlur()
            })
            r.on('scroll', I)
            o.events.bindClick(g, 'i#fr-modal-more-' + o.sid, F)
            o.events.bindClick(d, 'a', j)
            i.show()
            n.find('.fr-list-column').empty()
            if (o.opts.videoManagerLoadURL) {
              O.ajax({
                url: o.opts.videoManagerLoadURL,
                method: o.opts.videoManagerLoadMethod,
                data: o.opts.videoManagerLoadParams,
                dataType: 'json',
                crossDomain: o.opts.requestWithCORS,
                xhrFields: { withCredentials: o.opts.requestWithCredentials },
                headers: o.opts.requestHeaders
              })
                .done(function (e, a, t) {
                  e = e.Data.Content.map((m, i) => ({
                    url: m.Content,
                    thumb: m.Content,
                    name: m.Title,
                    type: 'image',
                    id: ++i,
                    tag: m.Title
                  }))
                  o.events.trigger('videoManager.imagesLoaded', [ e ])
                  function bs (e, a) {
                    try {
                      n.find('.fr-list-column').empty()
                      u = m = f = 0
                      s = e
                      I()
                    } catch (t) {
                      U(M, a)
                    }
                  }
                  bs(e, t.response)
                  i.hide()
                })
                .fail(function () {
                  var e = this.xhr()
                  U(p, e.response || e.responseText)
                })
            } else {
              U(v)
            }
          },
          hide: function () {
            o.modals.hide(h)
          }
        }
      )
    }),
    !O.FE.PLUGINS.image)
  ) {
    throw new Error('Image manager plugin requires image plugin.')
  }
  // O.FE.DEFAULTS.videoInsertButtons.push('videoManager'),
  O.FE.RegisterCommand('videoManager', {
    title: '视频管理',
    undo: !1,
    focus: !1,
    modal: !0,
    callback: function () {
      this.videoManager.show()
    },
    plugin: 'videoManager'
  })
  O.FE.DefineIcon('videoManager', { NAME: 'film' })
  O.FE.DefineIcon('videoManagerInsert', { NAME: 'plus' })
  O.FE.DefineIcon('videoManagerDelete', { NAME: 'trash' })
})($)
